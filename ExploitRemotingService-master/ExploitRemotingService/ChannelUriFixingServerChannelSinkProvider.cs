using System;
using System.Runtime.Remoting.Channels;

namespace ExploitRemotingService
{
    internal class ChannelUriFixingServerChannelSinkProvider : IServerChannelSinkProvider
    {
        private readonly string publicHost;
        private readonly int publicPort;

        public IServerChannelSinkProvider Next { get; set; }

        public ChannelUriFixingServerChannelSinkProvider(string publicHost, int publicPort)
        {
            this.publicHost = publicHost;
            this.publicPort = publicPort;
        }

        public IServerChannelSink CreateSink(IChannelReceiver channel)
        {
            IServerChannelSink serverChannelSink = null;
            if (this.Next != null)
            {
                serverChannelSink = this.Next.CreateSink(channel);
            }
            return serverChannelSink;
        }

        public void GetChannelData(IChannelDataStore channelData)
        {
            if (this.Next != null)
            {
                this.Next.GetChannelData(channelData);
            }
            for (int i = 0; i < channelData.ChannelUris.Length; i++)
            {
                var uri = new Uri(channelData.ChannelUris[i]);
                channelData.ChannelUris[i] = new UriBuilder(uri)
                {
                    Host = this.publicHost ?? uri.Host,
                    Port = this.publicPort,
                }.ToString();
            }
        }
    }
}